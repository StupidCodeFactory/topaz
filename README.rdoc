= topaz

MIDI syncable tempo generator in Ruby

== Installation

  gem install midi-topaz
  
== Requirements

* {gamelan}[http://github.com/jvoorhis/gamelan]
* {midi-eye}[http://github.com/arirusso/midi-eye]
* {midi-message}[http://github.com/arirusso/midi-message]
* {unimidi}[http://github.com/arirusso/unimidi]

these will install automatically when you do gem install

== Usage

  require 'topaz'
  
For demonstration purposes, here's a mock sequencer class and object

  class Sequencer  
    def step
      @i ||= 0
      $stdout.puts "step #{@i+=1}"
    end  
  end
  
  seq = Sequencer.new
  
To step that sequencer using external MIDI clock, you would use

  # a midi input
  @input = UniMIDI::Input.first.open 
  
  @tempo = Topaz::Tempo.new(:midi => @input) { seq.step }
    
Or, for stepping using clock generated internally by your computer use

  @tempo = Topaz::Tempo.new(132) { seq.step }
  
By default, the block will be called at quarter note intervals but other intervals can be used.  This is used the same way for both internal and external clock.  In the following example, 16th notes will occur at 138 bpm   

  @tempo = Topaz::Tempo.new(138, :interval => 16) { seq.step }
  
You can automatically send MIDI start/stop/clock signals to an external MIDI device by passing in a MIDI output

  # a midi input
  @output = UniMIDI::Output.first.open 
  
  @tempo = Topaz::Tempo.new(120, :midi => @output) { seq.step }
  
or, sync both input and output

  @tempo = Topaz::Tempo.new(:midi => [@input, @output]) { seq.step }
  
Once the Tempo object is initialized, start the tempo listener

  @tempo.start
  
If you're syncing to external clock, nothing will happen until a "start" or "clock" message is received

You can also run this in the background using

  @tempo.start(:background => true)
  
== Documentation

* {examples}[http://github.com/arirusso/topaz/tree/master/examples]
* {rdoc}[http://rdoc.info/gems/midi-topaz] 

== Author

* {Ari Russo}[http://github.com/arirusso] <ari.russo at gmail.com>

== License

Apache 2.0, See the file LICENSE

Copyright (c) 2011 Ari Russo

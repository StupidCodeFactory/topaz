= topaz

MIDI syncable tempo generator in Ruby

== Installation

  gem install midi-topaz
  
== Requirements

* {gamelan}[http://github.com/jvoorhis/gamelan]
* {midi-eye}[http://github.com/arirusso/midi-eye]
* {unimidi}[http://github.com/arirusso/unimidi]

these will install automatically when you install from the gem

== Usage

  require 'topaz'
  
For demonstration purposes, here's a fake sequencer class and object

  class Sequencer
  
    def step
      @i ||= 0
      $stdout.puts "step #{@i+=1}"
    end
  
  end
  
  seq = Sequencer.new
  
To step that sequencer using external MIDI clock, you would use

  @input = UniMIDI::Input.first.open                       # a midi input
  @tempo = Topaz::Tempo.new(:midi => @input) { seq.step }
  
By default, the block will be called at quarter note intervals, but other intervals can be used such as in this case 16th notes:

  @tempo = Topaz::Tempo.new(:midi => @input, :interval => 16) { seq.step }
  
For stepping using internal generated clock

  @tempo = Topaz::Tempo.new(132) { seq.step }
  
Then start the tempo listener

  @tempo.start
  
If you're using external clock, it will wait for a "start" or "clock" signal before doing anything.

You can also run this in the background using

  @tempo.start(:background => true)
  
== Documentation

* {examples}[http://github.com/arirusso/topaz/tree/master/examples]
* {rdoc}[http://rdoc.info/gems/topaz] 

== Author

* {Ari Russo}[http://github.com/arirusso] <ari.russo at gmail.com>

== License

Apache 2.0, See the file LICENSE

Copyright (c) 2011 Ari Russo
